version: "3.9"

services:
  order-service:
    image: order-service
    build:
      context: .
    command: bash -c "npm run start:dev"
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - database
      - queue
    ports:
      - "3001:3001"
    volumes:
      - ./services/order-service/src:/usr/src/app/service/src:cached
      - ./services/core:/usr/src/app/core:cached

  payment-service:
    image: payment-service
    build:
      context: .
      network: "host"
    command: bash -c "npm run start:dev"
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - database
      - queue
    volumes:
      - ./services/payment-service/src:/usr/src/app/service/src:cached
      - ./services/core:/usr/src/app/core:cached

  delivery-service:
    image: delivery-service
    build:
      context: .
      network: "host"
    command: bash -c "npm run start:dev"
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - database
      - queue
    ports:
      - "3002:3002"
    volumes:
      - ./services/delivery-service/src:/usr/src/app/service/src:cached
      - ./services/core:/usr/src/app/core:cached

  logger-service:
    image: logger-service
    build:
      context: .
      network: "host"
    command: bash -c "npm run start:dev"
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - database
      - queue
    ports:
      - "3003:3003"
    volumes:
      - ./services/logger-service/src:/usr/src/app/service/src:cached
      - ./services/core:/usr/src/app/core:cached

  user-service:
    image: user-service
    build:
      context: .
    command: bash -c "npm run start:dev"
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - database
      - queue
    ports:
      - "3004:3004"
    volumes:
      - ./services/user-service/src:/usr/src/app/service/src:cached
      - ./services/core:/usr/src/app/core:cached
  
  discord-service:
    image: discord-service
    build:
      context: .
    command: bash -c "npm run start:dev"
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - database
      - queue
    volumes:
      - ./services/discord-service/src:/usr/src/app/service/src:cached
      - ./services/core:/usr/src/app/core:cached

  database:
    image: "postgres"
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql

  queue:
    image: "rabbitmq:management"
    logging:
      driver: none
    ports:
      - "5672:5672"
      - "15672:15672"

  reverse-proxy:
    image: "nginx:stable"
    depends_on:
        - order-service
        - delivery-service
        - user-service
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80

version: "3.3"

services:
  order-service:
    image: order-service
    build:
      context: .
    command: bash -c "npm run start:dev"
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - database
      - queue
    ports:
      - 3001:3001
    volumes:
      - ./services/order-service/src:/usr/src/app/service/src:cached
      - ./services/core:/usr/src/app/core:cached

  payment-service:
    image: payment-service
    build:
      context: .
    command: bash -c "npm run start:dev"
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - database
      - queue
    volumes:
      - ./services/payment-service/src:/usr/src/app/service/src:cached
      - ./services/core:/usr/src/app/core:cached

  delivery-service:
    image: delivery-service
    build:
      context: .
    command: bash -c "npm run start:dev"
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - database
      - queue
    ports:
      - 3002:3002
    volumes:
      - ./services/delivery-service/src:/usr/src/app/service/src:cached
      - ./services/core:/usr/src/app/core:cached

  logger-service:
    image: logger-service
    build:
      context: .
    command: bash -c "npm run start:dev"
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - database
      - queue
    ports:
      - 3003:3003
    volumes:
      - ./services/logger-service/src:/usr/src/app/service/src:cached
      - ./services/core:/usr/src/app/core:cached

  user-service:
    image: user-service
    build:
      context: .
    command: bash -c "npm run start:dev"
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - database
      - queue
    ports:
      - 3004:3004
    volumes:
      - ./services/user-service/src:/usr/src/app/service/src:cached
      - ./services/core:/usr/src/app/core:cached
  
  discord-service:
    image: discord-service
    build:
      context: .
    command: bash -c "npm run start:dev"
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - database
      - queue
    volumes:
      - ./services/discord-service/src:/usr/src/app/service/src:cached
      - ./services/core:/usr/src/app/core:cached

  database:
    image: postgres
    restart: unless-stopped
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - ./data/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql

  queue:
    image: rabbitmq:management
    restart: unless-stopped
    logging:
      driver: none
    ports:
      - 5672:5672
      - 15672:15672

  nginx:
    image: nginx:stable
    restart: unless-stopped
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - order-service
      - payment-service
      - delivery-service
      - logger-service
      - user-service
    ports:
      - 80:80
      - 443:443
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
